/**
 * Created by dgx on 2016/10/12.
 */
angular.module('myApp', ['restangular']);
angular.module('myApp', [])
    .factory('UserService', ['Restangular'], function (Restangular) {
        //现在可以在UserService中访问Restangular

    });
angular.module('myApp', [])
    .config(function ($httpProvider) {
        $httpProvider.defaults.userXDomain = true;
        delete $httpProvider.defaults.headers.common['X-Request-With'];

    });
angular.module('myApp', ['ngRoute'])
    .constant('ACCESS_LEVELS', {
        pub: 1,
        user: 2
    });
angular.module('myApp', ['ngRoute'])
    .config(function ($routeProvider, ACCESS_LEVELS) {
        $routeProvider
            .when('/',{
                controller:'MainController',
                templateUrl:'views/mian.html',
                access_level:ACCESS_LEVELS.pub
        })
            .when('/account',{
                controller:'AccountController',
                templateUrl:'views/account.html',
                access_level:ACCESS_LEVELS.user
            })
            .otherwise({
                redirectTo:'/'
            });
    });
angular.module('myApp',['restangular'])
    .constant('apiKey','API_KEY')
    .config(function (RestangularProvider,apiKey) {
        RestangularProvider.setBaseUrl("blabla");
        RestangularProvider.setDefaultRequestParams({
            apiKey:apiKey
        });
        RestangularProvider.setRestangularFields({
            id:'_id.$oid'
        });
        RestangularProvider.setRequestInterceptor(function (elem,operation,what) {
            if(operation==='put') {
                elem._id = undefined;
                return elem;
            }
            return elem;
        })

    });
/*
* Promise
* */
angular.module('myApp',[])
    .factory('GithubService',function ($q,$hhtp) {
        var getEventsFromRepo = function () {
            //任务
        }
        var service = {
            makeMultipleRequest:function(repos) {
                var d = $q.defer(), percentComplete = 0, output = [];
                for(var i = 0 ;i<repos.length;i++){
                    output.push(getEventsFromRepo(repos[i]));
                    percentComplete = (i + 1) / repos.length * 100;
                    d.notify(percentComplete);
                }
                d.resolve(output);
                return d.promise;
            }
        }
        return service;
    })
    .controller('DashboardController',['$scope','GithubService',function ($scope,UserService) {
        GithubService.makeMutipleRequests(['auser/beehive','angular/angular.js'])
            .then(function (result) {

            },function (percentComplete) {
                $scope.progress = percentComplete;
            })

    }])






















